{"version":3,"sources":["Styles/MainComponent.module.css","Styles/Page.module.css","Styles/Actions.module.css","Redux/selectReducer.js","Components/MainComponent.js","Components/OptionComonent.js","Components/Actions.js","Components/Select.js","App.js","reportWebVitals.js","Redux/store.js","index.js","Styles/Select.module.css"],"names":["module","exports","initialState","selectedCount","options","type","text","depth","isVisible","isSelected","id","nestedFields","SET_VISIBILITY","SET_SELECTION","INCREMENT_SELECTED_COUNT","CLEAR_ALL","checkId","field","editVisibility","option","shouldBeVisible","editFields","highField","map","editField","editSelection","shouldBeSelected","clearAll","clearFields","fields","clearField","selectReducer","state","action","payload","connect","optionsData","select","incrementSelectedCount","count","props","counter","useState","selectedDataText","createSelectedData","checkFields","checkField","push","useEffect","setCount","useCallback","className","stylesMain","mainComponent","mainComponent__body","mainComponent__text","to","input","input__sl","mainComponent__showBtn","StyledOption","styled","div","StyledBody","visibility","StyledButton","Checkbox","OptionComponent","setVisibility","setSelection","clicked","setClicked","stylesSelect","select__option","select__option__visible","select__option__selected","select__selectBtn","checked","onChange","e","target","onClick","select__option__content","select__option__content__selected","value","hasNested","select__option__content__icon","select__option__content__icon__clicked","icon","faAngleDown","Actions","stylesActions","actions","actions__body","actions__accept","onClear","actions__clear","clearAllFields","focus","searchedWords","setSearchedWords","highId","createdOptionsData","allOptionsData","allOptionsArray","createOptions","componentsArray","toLowerCase","includes","option1","createAllOptions","select__head","select__head__link","faArrowLeft","onFocus","obj","onBlur","select__head__search","placeholder","select__content","App","pageStyles","wrapper","page","_container","page__body","from","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.01056f28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainComponent__body\":\"MainComponent_mainComponent__body__3Z2oN\",\"mainComponent__text\":\"MainComponent_mainComponent__text__3xldt\",\"mainComponent__showBtn\":\"MainComponent_mainComponent__showBtn__29wgk\",\"input\":\"MainComponent_input__DF1HL\",\"input__sl\":\"MainComponent_input__sl__3EdQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__body\":\"Page_page__body__j4Z-_\",\"_container\":\"Page__container__8AWgL\",\"wrapper\":\"Page_wrapper__WVFMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"Actions_actions__OYr0P\",\"actions__body\":\"Actions_actions__body__Rz1vJ\",\"actions__accept\":\"Actions_actions__accept__5N1Cm\",\"actions__clear\":\"Actions_actions__clear__1TNXw\"};","let initialState = {\r\n    selectedCount: 0 ,\r\n    options: [\r\n        {\r\n            type: 'А' ,\r\n            text: 'Продукция сельского хозяйства, лесного хозяйства, рыбоводства и рыболовства' ,\r\n            depth: 0 ,\r\n            isVisible: true ,\r\n            isSelected: false ,\r\n            id: 1 ,\r\n            nestedFields: null ,\r\n        } ,\r\n        {\r\n            type: 'О' ,\r\n            text: 'Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по обязательному социальному страхованию' ,\r\n            depth: 0 ,\r\n            isVisible: true ,\r\n            isSelected: false ,\r\n            id: 1321 ,\r\n            nestedFields: [\r\n                {\r\n                    type: '84' ,\r\n                    text: 'Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по обязательному социальному страхованию' ,\r\n                    depth: 1 ,\r\n                    isVisible: false ,\r\n                    id: 2 ,\r\n                    isSelected: false ,\r\n                    nestedFields: [\r\n                        {\r\n                            type: '84.1' ,\r\n                            text: 'Услуги в области государственного управления общего характера и социально-экономической сфере' ,\r\n                            depth: 2 ,\r\n                            isVisible: false ,\r\n                            id: 3 ,\r\n                            isSelected: false ,\r\n                            nestedFields: [\r\n                                {\r\n                                    type: '84.1.1' ,\r\n                                    text: 'Услуги в области государственного управления общего характера' ,\r\n                                    depth: 3 ,\r\n                                    id: 4 ,\r\n                                    isVisible: false ,\r\n                                    isSelected: false ,\r\n                                    nestedFields: null\r\n                                } ,\r\n                            ]\r\n                        } ,\r\n                        {\r\n                            type: '84.1' ,\r\n                            text: 'Услуги в области государственного управления общего характера и социально-экономической сфере' ,\r\n                            depth: 2 ,\r\n                            isVisible: false ,\r\n                            id: 131 ,\r\n                            isSelected: false ,\r\n                            nestedFields: [\r\n                                {\r\n                                    type: '84.1.1' ,\r\n                                    text: 'Услуги в области государственного управления общего характера' ,\r\n                                    depth: 3 ,\r\n                                    id: 345 ,\r\n                                    isVisible: false ,\r\n                                    isSelected: false ,\r\n                                    nestedFields: null\r\n                                } ,\r\n                            ]\r\n                        } ,\r\n                    ]\r\n                } ,\r\n            ] ,\r\n        } ,\r\n        {\r\n            type: 'О' ,\r\n            text: 'Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по обязательному социальному страхованию' ,\r\n            depth: 0 ,\r\n            isVisible: true ,\r\n            isSelected: false ,\r\n            id: 13211 ,\r\n            nestedFields: [\r\n                {\r\n                    type: '84' ,\r\n                    text: 'Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по обязательному социальному страхованию' ,\r\n                    depth: 1 ,\r\n                    isVisible: false ,\r\n                    id: 22 ,\r\n                    isSelected: false ,\r\n                    nestedFields: [\r\n                        {\r\n                            type: '84.1' ,\r\n                            text: 'Услуги в области государственного управления общего характера и социально-экономической сфере' ,\r\n                            depth: 2 ,\r\n                            isVisible: false ,\r\n                            id: 313 ,\r\n                            isSelected: false ,\r\n                            nestedFields: [\r\n                                {\r\n                                    type: '84.1.1' ,\r\n                                    text: 'Услуги в области государственного управления общего характера' ,\r\n                                    depth: 3 ,\r\n                                    id: 451 ,\r\n                                    isVisible: false ,\r\n                                    isSelected: false ,\r\n                                    nestedFields: null\r\n                                } ,\r\n                            ]\r\n                        } ,\r\n                        {\r\n                            type: '84.1' ,\r\n                            text: 'Услуги в области государственного управления общего характера и социально-экономической сфере' ,\r\n                            depth: 2 ,\r\n                            isVisible: false ,\r\n                            id: 33253 ,\r\n                            isSelected: false ,\r\n                            nestedFields: [\r\n                                {\r\n                                    type: '84.1.1' ,\r\n                                    text: 'Услуги в области государственного управления общего характера' ,\r\n                                    depth: 3 ,\r\n                                    id: 32432632 ,\r\n                                    isVisible: false ,\r\n                                    isSelected: false ,\r\n                                    nestedFields: null\r\n                                } ,\r\n                            ]\r\n                        } ,\r\n                    ]\r\n                } ,\r\n            ] ,\r\n        } ,\r\n\r\n    ]\r\n}\r\n\r\nconst SET_VISIBILITY = 'select/SET_VISIBILITY'\r\nconst SET_SELECTION = 'select/SET_SELECTION'\r\nconst INCREMENT_SELECTED_COUNT = 'select/INCREMENT_SELECTED_COUNT'\r\nconst CLEAR_ALL = 'select/CLEAR_ALL'\r\n\r\nconst selectReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case INCREMENT_SELECTED_COUNT: {\r\n            return {\r\n                ...state ,\r\n                selectedCount: action.payload\r\n            }\r\n        }\r\n        case SET_VISIBILITY: {\r\n            return {\r\n                ...state ,\r\n                options: state.options.map ( option => {\r\n                    if (option.nestedFields) {\r\n                        return {\r\n                            ...option ,\r\n                            nestedFields: editVisibility ( option , action.payload.shouldBeVisible , action.payload.depth , action.payload.id )\r\n                        }\r\n                    } else return option\r\n                } )\r\n            }\r\n        }\r\n        case SET_SELECTION: {\r\n            return {\r\n                ...state ,\r\n                options: state.options.map ( option => {\r\n                    if (option.nestedFields) {\r\n                        if (option.id === action.payload.id) {\r\n                            return {\r\n                                ...option ,\r\n                                isSelected: action.payload.shouldBeSelected ,\r\n                                nestedFields: editSelection ( {\r\n                                    ...option ,\r\n                                    isSelected: action.payload.shouldBeSelected\r\n                                } , action.payload.shouldBeSelected , action.payload.id )\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...option ,\r\n                                nestedFields: editSelection ( option , action.payload.shouldBeSelected , action.payload.id )\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (option.id === action.payload.id) {\r\n                            return {\r\n                                ...option ,\r\n                                isSelected: action.payload.shouldBeSelected ,\r\n                            }\r\n                        }else return option\r\n                    }\r\n                } )\r\n            }\r\n        }\r\n        case CLEAR_ALL: {\r\n            return {\r\n                ...state,\r\n                options: state.options.map(option => {\r\n                    if(option.nestedFields) {\r\n                        return {...option , isSelected: false , nestedFields: clearAll ( option )}\r\n                    }\r\n                    else return {...option, isSelected: false}\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nlet checkId = (field , id) => {\r\n    if (field.id === id) {\r\n        return true\r\n    }\r\n\r\n    if (field.nestedFields) {\r\n        for (const nestedField of field.nestedFields) {\r\n            if (checkId ( nestedField , id )) {\r\n                return true\r\n            }\r\n        }\r\n    } else return false\r\n}\r\n\r\nlet editVisibility = (option , shouldBeVisible , depth , id) => {\r\n    let editFields = (nestedFields , highField) => {\r\n\r\n        return nestedFields.map ( field => {\r\n            return editField ( field , highField )\r\n        } )\r\n    }\r\n\r\n    let editField = (field , highField) => {\r\n        if (field.depth === depth) {\r\n            return {...field , isVisible: shouldBeVisible}\r\n        } else {\r\n            if (field.nestedFields && checkId ( field , id )) return {\r\n                ...field ,\r\n                nestedFields: editFields ( field.nestedFields , highField )\r\n            }\r\n            else return field\r\n        }\r\n    }\r\n\r\n    if (checkId ( option , id )) {\r\n        return editFields ( option.nestedFields , option )\r\n    } else return option.nestedFields\r\n}\r\n\r\nlet editSelection = (option , shouldBeSelected , id) => {\r\n    let editFields = (nestedFields , highField) => {\r\n        return nestedFields.map ( field => {\r\n            return editField ( field , highField )\r\n        } )\r\n    }\r\n\r\n    let editField = (field , highField) => {\r\n        if (field.id === id) {\r\n            if (field.nestedFields) {\r\n                return {\r\n                    ...field ,\r\n                    isSelected: shouldBeSelected ,\r\n                    nestedFields: editFields ( field.nestedFields , {...field , isSelected: shouldBeSelected} )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...field ,\r\n                    isSelected: shouldBeSelected ,\r\n                }\r\n            }\r\n        } else {\r\n            if (highField.isSelected === shouldBeSelected) {\r\n                if (field.nestedFields) {\r\n                    return {\r\n                        ...field ,\r\n                        isSelected: shouldBeSelected ,\r\n                        nestedFields: editFields ( field.nestedFields , {...field , isSelected: shouldBeSelected} )\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...field ,\r\n                        isSelected: shouldBeSelected ,\r\n                    }\r\n                }\r\n            } else {\r\n                if (field.nestedFields) {\r\n                    return {\r\n                        ...field ,\r\n                        nestedFields: editFields ( field.nestedFields , field )\r\n                    }\r\n                } else return field\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    if (checkId ( option , id )) {\r\n        return editFields ( option.nestedFields , option )\r\n    } else return option.nestedFields\r\n}\r\n\r\nlet clearAll = (option) => {\r\n    let clearFields = (fields) => {\r\n        return fields.map(field => {\r\n            return clearField(field)\r\n        })\r\n    }\r\n\r\n    let clearField = (field) => {\r\n        if(field.nestedFields) return {...field, isSelected: false, nestedFields: clearFields(field.nestedFields)}\r\n        else return {...field, isSelected: false}\r\n    }\r\n\r\n\r\n    return clearFields(option.nestedFields)\r\n}\r\n\r\nexport const setVisibility = (shouldBeVisible , depth , id) => ({\r\n    type: SET_VISIBILITY ,\r\n    payload: {shouldBeVisible , depth , id}\r\n})\r\nexport const setSelection = (shouldBeSelected , id) => ({type: SET_SELECTION , payload: {shouldBeSelected , id}})\r\nexport const incrementSelectedCount = (count) => ({type: INCREMENT_SELECTED_COUNT , payload: count})\r\nexport const clearAllFields = () => ({type: CLEAR_ALL})\r\n\r\nexport default selectReducer;","import React , { useCallback , useEffect , useState } from 'react'\r\n\r\nimport stylesMain from '../Styles/MainComponent.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { incrementSelectedCount } from \"../Redux/selectReducer\";\r\n\r\nconst MainComponent = ({...props}) => {\r\n    let counter = 0;\r\n\r\n    let [selectedDataText] = useState ( [] )\r\n\r\n    const createSelectedData = (optionsData) => {\r\n        let checkFields = (fields) => {\r\n            for (let field of fields) {\r\n                checkField(field)\r\n            }\r\n        }\r\n\r\n        let checkField = (field) => {\r\n            if (field.isSelected) {\r\n                selectedDataText.push ( `[${ field.type }] - ${ field.text }; ` )\r\n            }\r\n            if (field.nestedFields) return checkFields ( field.nestedFields )\r\n            else if (field.nestedFields) return checkFields ( field.nestedFields )\r\n        }\r\n\r\n        checkFields(optionsData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.selectedCount !== 0) {\r\n            createSelectedData ( props.optionsData )\r\n        }\r\n    }, [])\r\n\r\n    let setCount = (useCallback ( (optionsData) => {\r\n        for (const option of optionsData) {\r\n            if (option.isSelected) {\r\n                counter++\r\n            }\r\n            if (option.nestedFields) {\r\n                setCount ( option.nestedFields )\r\n            } else props.incrementSelectedCount ( counter )\r\n        }\r\n    } , [props.optionsData] ))\r\n\r\n    useEffect ( () => {\r\n        setCount ( props.optionsData )\r\n        createSelectedData ( props.optionsData )\r\n    } , [props.optionsData , setCount] )\r\n\r\n    return (\r\n        <div className={ stylesMain.mainComponent }>\r\n            <div className={ stylesMain.mainComponent__body }>\r\n                <div className={ stylesMain.mainComponent__text }>\r\n                    { props.selectedCount !== 0 ? 'Тендеры в роли Заказчика' : 'Тендеры в роли Поставщика' }\r\n                </div>\r\n                <NavLink to={ '/selection' }\r\n                         className={ stylesMain.input + ' ' + (props.selectedCount !== 0 && stylesMain.input__sl) }>\r\n                    { props.selectedCount !== 0 ? selectedDataText : 'Код ОКРБ или наименование закупаемой продукции' }\r\n                </NavLink>\r\n                { props.selectedCount !== 0 &&\r\n                <NavLink to={ '/selection' } className={ stylesMain.mainComponent__showBtn }>\r\n                    Показать выбранное({ props.selectedCount })\r\n                </NavLink> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        optionsData: state.select.options ,\r\n        selectedCount: state.select.selectedCount ,\r\n    }\r\n}\r\n\r\nexport default connect ( MapStateToProps , {incrementSelectedCount} ) ( MainComponent )","import React , { useState } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\nimport stylesSelect from '../Styles/Select.module.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { Checkbox } from \"antd\";\r\n\r\nconst StyledOption = styled.div`\r\n    transition: all 0.3s ease 0s;\r\n    margin-left: ${ props => props.depth * 15 }px;\r\n    display: ${ props => props.isVisible ? 'block' : 'none' };\r\n`\r\nconst StyledBody = styled.div`\r\n    padding: ${ props => props.visibility && '6px 20px' };\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    gap: 30px;\r\n    align-items: center;\r\n`\r\n\r\nconst StyledButton = styled ( Checkbox )`\r\n    .ant-checkbox-checked .ant-checkbox-inner{\r\n         background-color: #035B77;\r\n         border-color: #035B77;\r\n    }\r\n    .ant-checkbox:hover .ant-checkbox-inner,\r\n    .ant-checkbox-input:focus+.ant-checkbox-inner{\r\n         border-color: #035B77;\r\n    }\r\n    .ant-checkbox-indeterminate .ant-checkbox-inner::after {\r\n        background-color: #035B77;\r\n    }\r\n    .ant-checkbox-wrapper{\r\n        border-color: #035B77;\r\n    }\r\n`\r\n\r\nconst OptionComponent = ({setVisibility , setSelection , isVisible , visibility , depth , id , text , type , ...props}) => {\r\n    const onClick = () => {\r\n        if (isVisible !== null) {\r\n            setVisibility ( !isVisible , depth + 1 , id )\r\n        }\r\n    }\r\n\r\n    let onChange = (e) => {\r\n        setSelection ( e.target.checked , id )\r\n    }\r\n\r\n    let [clicked, setClicked] = useState(false)\r\n\r\n\r\n    return (\r\n        <li className={ stylesSelect.select__option + ' ' + (visibility && stylesSelect.select__option__visible) + ' ' + (props.isSelected && stylesSelect.select__option__selected) }>\r\n            <StyledBody visibility={ visibility }>\r\n                { visibility && <StyledButton className={ stylesSelect.select__selectBtn } checked={ props.isSelected }\r\n                                              onChange={ onChange }/> }\r\n                <div onClick={ onClick } className={ stylesSelect.select__option__content + ' ' + (props.isSelected && stylesSelect.select__option__content__selected) }>\r\n                    <StyledOption onClick={() => setClicked(!clicked)} id={ props.id } depth={ depth } value=\"\" isVisible={ visibility }>\r\n                        { props.hasNested &&\r\n                        <FontAwesomeIcon className={ stylesSelect.select__option__content__icon + ' ' + (clicked && stylesSelect.select__option__content__icon__clicked)}\r\n                                         icon={ faAngleDown }/> }\r\n                        [{ type }] - { text }\r\n                    </StyledOption>\r\n                </div>\r\n            </StyledBody>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default OptionComponent","import React from 'react'\r\n\r\n\r\nimport stylesActions from '../Styles/Actions.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Actions = (props) => {\r\n    return(\r\n        <div className={ stylesActions.actions }>\r\n            <div className={ stylesActions.actions__body }>\r\n                <NavLink to={'/home'} className={ stylesActions.actions__accept}>Применить</NavLink>\r\n                <button onClick={props.onClear} className={ stylesActions.actions__clear}>Очистить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actions","import React , { useState } from 'react'\r\n\r\nimport stylesSelect from '../Styles/Select.module.css'\r\nimport OptionComponent from \"./OptionComonent\";\r\nimport { clearAllFields , setSelection , setVisibility } from \"../Redux/selectReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Actions from \"./Actions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Select = ({focus , optionsData , ...props}) => {\r\n    let [searchedWords , setSearchedWords] = useState ( '' )\r\n    let [highId] = useState ( [] )\r\n\r\n    let createAllOptions = (allOptionsData) => {\r\n        let allOptionsArray = []\r\n        let createOptions = (option , componentsArray = []) => {\r\n            highId.push ( {id: option.id , depth: option.depth + 1} )\r\n\r\n            if (searchedWords) {\r\n                option.text.toLowerCase ().includes ( searchedWords.toLowerCase () ) && componentsArray.push (\r\n                    <OptionComponent { ...props }\r\n                                     id={ option.id }\r\n                                     visibility={ option.isVisible }\r\n                                     isVisible={ option.nestedFields ? option.nestedFields[0].isVisible : null }\r\n                                     type={ option.type }\r\n                                     text={ option.text }\r\n                                     depth={ option.depth }\r\n                                     searchedWords={ searchedWords }\r\n                                     isSelected={ option.isSelected }\r\n                                     hasNested={!!option.nestedFields}\r\n                    /> )\r\n            } else componentsArray.push ( <OptionComponent { ...props }\r\n                                                           id={ option.id }\r\n                                                           visibility={ option.isVisible }\r\n                                                           isVisible={ option.nestedFields ? option.nestedFields[0].isVisible : null }\r\n                                                           type={ option.type }\r\n                                                           text={ option.text }\r\n                                                           depth={ option.depth }\r\n                                                           searchedWords={ searchedWords }\r\n                                                           isSelected={ option.isSelected }\r\n                                                           hasNested={!!option.nestedFields}\r\n            /> )\r\n            if (option.nestedFields) {\r\n                for (let option1 of option.nestedFields) {\r\n                    createOptions ( option1 , componentsArray )\r\n                }\r\n            }\r\n            return componentsArray\r\n        }\r\n\r\n        for (let option of allOptionsData) {\r\n            highId.push ( option.id )\r\n            allOptionsArray.push ( createOptions ( option ) )\r\n        }\r\n\r\n        return allOptionsArray\r\n    }\r\n    let createdOptionsData = createAllOptions ( optionsData )\r\n\r\n\r\n    let onChange = (e) => {\r\n        setSearchedWords ( e.target.value )\r\n    }\r\n\r\n    let onFocus = () => {\r\n        for (let obj of highId) {\r\n            props.setVisibility ( true , obj.depth , obj.id )\r\n        }\r\n    }\r\n\r\n    let onBlur = () => {\r\n        for (let obj of highId) {\r\n            props.setVisibility ( false , obj.depth , obj.id )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={ stylesSelect.select }>\r\n            <div className={ stylesSelect.select__head }>\r\n                <NavLink className={ stylesSelect.select__head__link } to={ '/test-task/home' }>\r\n                    <FontAwesomeIcon icon={ faArrowLeft }/> Реализуемые товары\r\n                </NavLink>\r\n                <input onChange={ onChange } onFocus={ onFocus } onBlur={ onBlur }\r\n                       className={ stylesSelect.select__head__search } type=\"search\"\r\n                       placeholder={'Поиск...'}\r\n                />\r\n            </div>\r\n            <div className={ stylesSelect.select__content }>\r\n                <ul>\r\n                    { createdOptionsData }\r\n                </ul>\r\n            </div>\r\n            <Actions onClear={props.clearAllFields}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        optionsData: state.select.options ,\r\n    }\r\n\r\n}\r\n\r\nexport default connect ( MapStateToProps , {setVisibility , setSelection, clearAllFields} ) ( Select )","import React from 'react'\n\nimport MainComponentContainer from \"./Components/MainComponent\";\n\nimport pageStyles from './Styles/Page.module.css'\nimport { Redirect , Route } from \"react-router\";\nimport SelectContainer from \"./Components/Select\";\n\n\nconst App = () => {\n    return (\n            <main className={pageStyles.wrapper}>\n                <div className={ pageStyles.page + ' ' + pageStyles._container}>\n                    <div className={ pageStyles.page__body }>\n                        <Redirect from={'https://shifttops.github.io/test-task/'} to={'/home'}/>\n                        <Route path={'/selection'} render={() => <SelectContainer/>}/>\n                        <Route  path={ '/home' } render={ () => <MainComponentContainer/> }/>\n                    </div>\n                </div>\n            </main>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers , createStore } from \"redux\";\r\nimport selectReducer from \"./selectReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        select: selectReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store;\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\n\nimport store from \"./Redux/store\";\nimport { BrowserRouter , HashRouter } from \"react-router-dom\";\n\nReactDOM.render (\n    <React.StrictMode>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={ store }>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode> ,\n    document.getElementById ( 'root' )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals ();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__rPRDN\",\"select__head\":\"Select_select__head__2puP8\",\"select__head__link\":\"Select_select__head__link__2oxYD\",\"select__head__search\":\"Select_select__head__search__3W4mF\",\"select__selectBtn\":\"Select_select__selectBtn__3lyUf\",\"ant-checkbox-checked\":\"Select_ant-checkbox-checked__3WEiU\",\"ant-checkbox-inner\":\"Select_ant-checkbox-inner__6j4Ok\",\"select__option\":\"Select_select__option__2EPRg\",\"select__option__selected\":\"Select_select__option__selected__10efy\",\"select__option__content\":\"Select_select__option__content__3yzAy\",\"select__option__content__selected\":\"Select_select__option__content__selected__2uCNp\",\"select__option__content__icon\":\"Select_select__option__content__icon__2B_ey\",\"select__option__content__icon__clicked\":\"Select_select__option__content__icon__clicked__2LoHp\",\"select__option__body\":\"Select_select__option__body__1gPQk\",\"select__option__visible\":\"Select_select__option__visible__zk89I\"};"],"sourceRoot":""}